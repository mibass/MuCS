#include "services_microboone.fcl"
#include "MuCSRecoToMC_module.fcl"
#include "corsika_microboone.fcl"

process_name: MuCSRecoToMCCorsika

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "mucsrecotomc_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  user:                 @local::microboone_gen_services
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::microboone_MuCSRecoToMC
   corsika:       @local::microboone_corsika_cmc
   rns:       { module_type: "RandomNumberSaver" }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, generator, corsika ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_MuCSRecoToMC.root" #default file name, can override from command line with -o or --output
   dataTier:    "mucs_recotomc"
   compressionLevel: 1
   outputCommands: ["keep *_*_*_MuCSRecoToMCCorsika"]
   dropMetaDataForDroppedData: true
 }
}

physics.producers.generator.MuonKE: 4
DetectorClocksService.InheritClockConfig: false
services.user.DetectorClocksService.InheritClockConfig: false
